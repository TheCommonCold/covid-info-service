{"version":3,"sources":["components/TopBar.js","components/restrictions/SingleRestriction.js","components/restrictions/RestrictionsList.js","components/restrictions/Restrictions.js","components/helpers.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","Navbar","bg","variant","Brand","href","Nav","className","to","SingleRestriction","props","content","details","map","detail","RestrictionsList","Container","restrictions","category","Card","border","Header","Title","title","Body","restriction","Restrictions","useEffect","ReactGA","pageview","window","location","pathname","search","console","log","Jumbotron","fluid","Alert","Row","Col","size","UpcomingRestrictionsData","RestrictionsData","newOrOld","field","statsData","updateWarning","percentageDifference","value","Math","floor","Landing","sum","i","casesHistory","length","parseInt","avg","max","doomCounterValues","doomCounterActualValues","push","doomCounterValue","average","lastUpdateDate","lastCases","sm","xs","span","order","lg","md","ProgressBar","animated","now","label","String","round","toString","lastRestrictions","Button","block","process","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1a1a84b.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction TopBar() {\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" >\r\n            <Navbar.Brand href=\"/\">info-covid.pl</Navbar.Brand>\r\n            <Nav className=\"w-100 justify-content-end\">\r\n                <Link className=\"nav-link\" to=\"/\">Statystyki</Link>\r\n                <Link className=\"nav-link\" to=\"/restrictions\">Obostrzenia</Link>\r\n                {/* <Link className=\"nav-link\" to=\"/statistics\">Statystyki</Link> */}\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","function SingleRestriction(props) {\r\n    return (\r\n        <li>\r\n            <p className='m-0'>{props.content}</p>\r\n            {props.details &&\r\n                <ul>\r\n                    {props.details.map(detail => {\r\n                        return <li key={detail} className=\"font-weight-light\">{<small>{detail}</small>}</li>\r\n                    })}\r\n                </ul>\r\n            }\r\n            <hr className='m-2' />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SingleRestriction;\r\n","import { Card, Container } from 'react-bootstrap'\r\nimport SingleRestriction from './SingleRestriction'\r\n\r\nfunction RestrictionsList(props) {\r\n    return (\r\n        <Container className=\"p-0\">\r\n            {\r\n                props.restrictions.map(category => {\r\n                    return (\r\n                        <Card key={category.title} border=\"light\">\r\n                            <Card.Header>\r\n                                <Card.Title className=\"m-0\"><h6 className=\"m-0\">{category.title}</h6></Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-1\">\r\n                                <ul className=\"pl-4\">\r\n                                    {category.restrictions.map(restriction => {\r\n                                        return <SingleRestriction key={restriction.content} content={restriction.content} details={restriction.details} />\r\n                                    })}\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RestrictionsList;\r\n","import ReactGA from 'react-ga';\r\nimport RestrictionsList from './RestrictionsList'\r\nimport { Jumbotron, Row, Col, Alert, Container } from 'react-bootstrap'\r\nimport { FaTwitterSquare } from 'react-icons/fa';\r\nimport RestrictionsData from '../../data/restrictions.json'\r\nimport UpcomingRestrictionsData from '../../data/upcomingRestrictions.json'\r\nimport { useEffect } from 'react';\r\n\r\nfunction Restrictions() {\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n        console.log(window.location.pathname + window.location.search);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid className=\"m-0 pt-0\">\r\n                <Alert className='p-0 m-0' variant='danger'><h4 className=\"text-center\">Nadchodzące obostrzenia</h4></Alert>\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col className='p-0'>\r\n                            <small>Na podstawie <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}MZ_GOV_PL</a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={UpcomingRestrictionsData} />\r\n            </Jumbotron>\r\n            <Jumbotron fluid className=\"p-0 m-0\">\r\n                <Alert className='p-0 m-0' variant='info'><h4 className=\"text-center\">Aktualne obostrzenia</h4></Alert>\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col className='p-0'>\r\n                            <small>Dokładny spis aktualnych zasad i ograniczeń znajdziesz na <a href=\"https://www.gov.pl/web/koronawirus/aktualne-zasady-i-ograniczenia\"><b>gov.pl</b></a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={RestrictionsData} />\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restrictions;\r\n","import statsData from '../data/statsData.json'\r\n\r\nexport function newOrOld(field) {\r\n    return statsData['today'][field] ? statsData['today'][field] : statsData['yesterday'][field]\r\n}\r\n\r\nexport function updateWarning(field) {\r\n    if (!statsData['today'][field]) {\r\n        return <p className='adnotation text-danger m-0'>(Wczorajsza wartość)</p>\r\n    }\r\n}\r\n\r\nexport function percentageDifference(field) {\r\n    if (!statsData['today'][field]) {\r\n        return null\r\n    }\r\n    const value = Math.floor(((statsData['today'][field] / statsData['yesterday'][field]) - 1) * 100)\r\n    if (value > 0)\r\n        return <div className='adnotation text-danger'>({value}%↗)</div>\r\n    if (value === 0)\r\n        return <div className='adnotation text-secondary'>(-%)</div>\r\n    return <div className='adnotation text-success'>({value}%↘)</div>\r\n}\r\n\r\nexport function doomCounterValue() {\r\n    var sum = 0;\r\n    for (var i = 0; i < statsData.casesHistory.length; i++) {\r\n        sum += parseInt(statsData.casesHistory[i], 10);\r\n    }\r\n    var avg = (sum / statsData.casesHistory.length) / 38383000 * 100000;\r\n\r\n    const max = 75 / 100\r\n    const doomCounterValues = []\r\n    const doomCounterActualValues = []\r\n    if (avg < 10) {\r\n        doomCounterValues.push((avg - 2) / max)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterActualValues.push(avg)\r\n        doomCounterActualValues.push(0)\r\n        doomCounterActualValues.push(0)\r\n        doomCounterActualValues.push(0)\r\n        doomCounterActualValues.push(0)\r\n    } else if (avg < 25) {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push((avg - 10) / max)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterActualValues.push(10)\r\n        doomCounterActualValues.push(avg)\r\n        doomCounterActualValues.push(0)\r\n        doomCounterActualValues.push(0)\r\n        doomCounterActualValues.push(0)\r\n    } else if (avg < 50) {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push(15 / max)\r\n        doomCounterValues.push((avg - 25) / max)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterActualValues.push(10)\r\n        doomCounterActualValues.push(25)\r\n        doomCounterActualValues.push(avg)\r\n        doomCounterActualValues.push(0)\r\n        doomCounterActualValues.push(0)\r\n    } else if (avg < 70) {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push(15 / max)\r\n        doomCounterValues.push(25 / max)\r\n        doomCounterValues.push((avg - 50) / max)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterActualValues.push(10)\r\n        doomCounterActualValues.push(25)\r\n        doomCounterActualValues.push(50)\r\n        doomCounterActualValues.push(avg)\r\n        doomCounterActualValues.push(0)\r\n    } else {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push(15 / max)\r\n        doomCounterValues.push(25 / max)\r\n        doomCounterValues.push(20 / max)\r\n        doomCounterValues.push((avg - 70) / max)\r\n\r\n        doomCounterActualValues.push(10)\r\n        doomCounterActualValues.push(25)\r\n        doomCounterActualValues.push(50)\r\n        doomCounterActualValues.push(70)\r\n        doomCounterActualValues.push(avg)\r\n    }\r\n\r\n    return [doomCounterValues, doomCounterActualValues, avg]\r\n}","import ReactGA from 'react-ga';\nimport { Jumbotron, Container, Row, Col, Button, ProgressBar } from 'react-bootstrap'\nimport {\n    Link\n} from \"react-router-dom\";\nimport lastUpdateDate from '../data/lastUpdateDate.json'\nimport { newOrOld, percentageDifference, updateWarning, doomCounterValue } from './helpers'\nimport { FaTwitterSquare } from 'react-icons/fa';\nimport { useEffect } from 'react';\n\nfunction Landing() {\n    const [doomCounterValues, doomCounterActualValues, average] = doomCounterValue()\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n        console.log(window.location.pathname + window.location.search);\n    });\n    return (\n        <div>\n            <Jumbotron className='p-0 m-2' >\n                <Container className=\"text-center\" >\n                    <Row>\n                        <Col>\n                            <p className='m-0 font-weight-light'>Ostatnia aktualizacja: {lastUpdateDate.lastCases}</p>\n                            <hr className='m-2' />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm='4' xs={{ span: 6 }} className='mb-3'>\n                            <h6>Nowe zakażenia:</h6>\n                            <h4 className='m-0'>{newOrOld('new_cases_today')}</h4>\n                            {updateWarning('new_cases_today')}\n                            {percentageDifference('new_cases_today')}\n                        </Col>\n                        <Col sm='4' xs={{ span: 12, order: 'last' }} className='mb-3'>\n                            <h6>Aktywne przypadki:</h6>\n                            <h4 className='m-0'>{newOrOld('active_cases')}</h4>\n                            {updateWarning('active_cases')}\n                            {percentageDifference('active_cases')}\n                        </Col>\n                        <Col sm={{ span: 4, order: 'last' }} xs={{ span: 6 }} className='mb-3'>\n                            <h6>Nowe zgony:</h6>\n                            <h4 className='m-0'>{newOrOld('dead_all_today')}</h4>\n                            {updateWarning('dead_all_today')}\n                            {percentageDifference('dead_all_today')}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <hr />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg={{ span: 3, order: 1 }} md={{ span: 6, order: 1 }} xs={{ span: 6, order: 1 }}>\n                            <h6>Liczba testów:</h6>\n                            <h4>{newOrOld('tests_done_today')}</h4>\n                            {updateWarning('tests_done_today')}\n                            <br />\n                        </Col>\n                        <Col lg={{ span: 3, order: 2 }} md={{ span: 6, order: 3 }} xs={{ span: 6, order: 3 }}>\n                            <h6>Zajęte respiratory:</h6>\n                            <h5>{newOrOld('occupied_respirator_count')}/{newOrOld('respirator_count')}</h5>\n                            <ProgressBar variant=\"danger\" animated\n                                now={newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100}\n                                label={String(Math.floor(newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100)) + '%'} />\n                            {updateWarning('occupied_respirator_count')}\n                        </Col>\n                        <Col lg={{ span: 3, order: 3 }} md={{ span: 6, order: 4 }} xs={{ span: 6, order: 4 }}>\n                            <h6>Zajęte łóżka:</h6>\n                            <h5>{newOrOld('occupied_bed_count')}/{newOrOld('bed_count')}</h5>\n                            <ProgressBar variant=\"danger\" animated\n                                now={newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100}\n                                label={String(Math.floor(newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100)) + '%'} />\n                            {updateWarning('occupied_bed_count')}\n                        </Col>\n                        <Col lg={{ span: 3, order: 4 }} md={{ span: 6, order: 2 }} xs={{ span: 6, order: 2 }}>\n                            <h6>Zgony Łącznie:</h6>\n                            <h4>{newOrOld('dead_global')}</h4>\n                            {updateWarning('dead_global')}\n                            <br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <hr className='m-2' />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className='mb-2'>\n                            <small>Dane pobierane z <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}MZ_GOV_PL</a></small>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <Jumbotron className='p-0 m-2' >\n                <Container className=\"text-center\" >\n                    <Row>\n                        <Col>\n                            <h6>Etapy zasad bezpieczeństwa</h6>\n                            <p className=\"font-weight-light\">Średnia liczba nowych zakażeń przez ostatnie 7dni na 100 tyś. mieszkańców: <b>{Math.round(average * 1000) / 1000}</b></p>\n                            <ProgressBar className='doom-bar'>\n                                <ProgressBar className=\"color-green\" now={doomCounterValues[0]} label={Math.floor(doomCounterActualValues[0]).toString() + '/10'} />\n                                <ProgressBar className=\"color-yellow\" now={doomCounterValues[1]} label={Math.floor(doomCounterActualValues[1]).toString() + '/25'} />\n                                <ProgressBar className=\"color-red\" now={doomCounterValues[2]} label={Math.floor(doomCounterActualValues[2]).toString() + '/50'} />\n                                <ProgressBar className=\"color-purple\" now={doomCounterValues[3]} label={Math.floor(doomCounterActualValues[3]).toString() + '/70'} />\n                                <ProgressBar className=\"color-black\" now={doomCounterValues[4]} label={Math.floor(doomCounterActualValues[4]).toString()} />\n                            </ProgressBar>\n                            <ProgressBar className='doom-light-bar'>\n                                <ProgressBar className=\"color-light-green\" now={10 / 0.75} />\n                                <ProgressBar className=\"color-light-yellow\" now={15 / 0.75} />\n                                <ProgressBar className=\"color-light-red\" now={25 / 0.75} />\n                                <ProgressBar className=\"color-light-purple\" now={20 / 0.75} />\n                                <ProgressBar className=\"color-light-black\" now={5 / 0.75} />\n                            </ProgressBar>\n                            <hr className='m-2' />\n                            <small>Więcej informacji o etapach zasad bezpieczeństwa:</small>\n                            <p><a href='https://twitter.com/PremierRP/status/1323980694033489923/photo/1'>{<FaTwitterSquare size={20} />}Kancelaria Premiera</a></p>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <Jumbotron className='p-0 m-2' >\n                <Container>\n                    <Row className=\"text-center\">\n                        <Col>\n                            <p className='m-0'>Aktualnie obowiązujące obostrzenia z dnia: {lastUpdateDate.lastRestrictions}</p>\n                        </Col>\n                    </Row>\n                    <Row className='m-0'>\n                        <Col className='p-0 m-2'>\n                            <Link to=\"/restrictions\"><Button className='restrictions-button' block>Zobacz obostrzenia</Button></Link>\n                        </Col>\n                        {/* <Col className='p-0 m-2'>\n                            <Link to=\"/statistics\"><Button className='w-100'>Statystyki</Button></Link>\n                        </Col> */}\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </div >\n    );\n}\n\nexport default Landing;\n","import TopBar from './components/TopBar'\nimport Restrictions from './components/restrictions/Restrictions'\nimport Landing from './components/Landing'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconsole.log(process.env)\n// console.log(process.env.SITE_URL)\n\nfunction App() {\n  return (\n    <Router>\n      <TopBar />\n      <Switch>\n        <Route path={process.env.PUBLIC_URL + '/restrictions'}>\n          <Restrictions />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + '/statistics'}>\n          <Landing />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + '/'}>\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactGA from 'react-ga';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactGA.initialize('G-5J0BQEKJX3');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
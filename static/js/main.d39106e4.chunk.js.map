{"version":3,"sources":["components/TopBar.js","components/restrictions/SingleRestriction.js","components/restrictions/RestrictionsList.js","components/restrictions/Restrictions.js","components/statistics/Statistics.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","Navbar","bg","variant","Brand","href","Nav","className","to","SingleRestriction","props","content","details","map","detail","RestrictionsList","Container","RestrictionsData","category","Card","border","Header","Title","title","Body","restrictions","restriction","Restrictions","Jumbotron","fluid","Statistics","console","log","statsData","Row","Col","lastUpdateDate","lastCases","lastRestrictions","Button","App","path","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d39106e4.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction TopBar() {\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" >\r\n            <Navbar.Brand href=\"#home\">COVID</Navbar.Brand>\r\n            <Nav className=\"w-100 justify-content-end\">\r\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                <Link className=\"nav-link\" to=\"/restrictions\">Obostrzenia</Link>\r\n                <Link className=\"nav-link\" to=\"/statistics\">Statystyki</Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","function SingleRestriction(props) {\r\n    return (\r\n        <li>\r\n            <p>{props.content}</p>\r\n            {props.details &&\r\n                <ul>\r\n                    {props.details.map(detail => {\r\n                        return <li className=\"font-weight-light\">{detail}</li>\r\n                    })}\r\n                </ul>\r\n            }\r\n            <hr />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SingleRestriction;\r\n","import { Card, Container } from 'react-bootstrap'\r\nimport RestrictionsData from '../../data/restrictions.json'\r\nimport SingleRestriction from './SingleRestriction'\r\n\r\nfunction RestrictionsList() {\r\n    return (\r\n        <Container className=\"p-0\">\r\n            {\r\n                RestrictionsData.map(category => {\r\n                    return (\r\n                        <Card border=\"light\">\r\n                            <Card.Header>\r\n                                <Card.Title className=\"m-0\">{category.title}</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-1\">\r\n                                <ul className=\"pl-4\">\r\n                                    {category.restrictions.map(restriction => {\r\n                                        return <SingleRestriction content={restriction.content} details={restriction.details} />\r\n                                    })}\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RestrictionsList;\r\n","import RestrictionsList from './RestrictionsList'\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nfunction Restrictions() {\r\n    //TODO: link to restriction source and disclaimer\r\n    return (\r\n        <Jumbotron fluid className=\"p-0\">\r\n            <RestrictionsList />\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Restrictions;\r\n","import { Jumbotron } from 'react-bootstrap'\r\n\r\nfunction Statistics() {\r\n    return (\r\n        <Jumbotron fluid className=\"text-center\">\r\n            <h1>COMING SOON...</h1>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Statistics;\r\n","import { Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport lastUpdateDate from '../data/lastUpdateDate.json'\r\nimport statsData from '../data/statsData.json'\r\n\r\nfunction RestrictionsList() {\r\n    console.log(statsData)\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid className='p-1 m-2' >\r\n                <Container fluid className=\"text-center\" >\r\n                    <Row>\r\n                        <Col>\r\n                            <p className='m-0 font-weight-light'>Dane z dnia {lastUpdateDate.lastCases}</p>\r\n                            <hr className='m-2' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Nowe zakażenia:</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <h6>Nowe zgony:</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4 className='text-danger'>+30000</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4 className='text-danger'>+1000</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Liczba wykonanych testów</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>80000</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Aktywne przypadki</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <h6>Zgony</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>200000</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>5000</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Zajęte respiratory</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <h6>Zajęte łóżka</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>1000/1500</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>1000/1500</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <hr className='m-2' />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n            <Jumbotron fluid className='p-1 m-2' >\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col>\r\n                            <p className='m-0'>Aktualnie obowiązujące obostrzenia z dnia: {lastUpdateDate.lastRestrictions}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='m-0'>\r\n                        <Col className='p-0 m-2'>\r\n                            <Link to=\"/restrictions\"><Button className='w-100'>Obostrzenia</Button></Link>\r\n                        </Col>\r\n                        <Col className='p-0 m-2'>\r\n                            <Link to=\"/statistics\"><Button className='w-100'>Statystyki</Button></Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RestrictionsList;\r\n","import TopBar from './components/TopBar'\nimport Restrictions from './components/restrictions/Restrictions'\nimport Statistics from './components/statistics/Statistics'\nimport Landing from './components/Landing'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <TopBar />\n      <Switch>\n        <Route path=\"/restrictions\">\n          <Restrictions />\n        </Route>\n        <Route path=\"/statistics\">\n          <Statistics />\n        </Route>\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
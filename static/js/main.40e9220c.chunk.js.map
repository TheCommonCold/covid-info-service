{"version":3,"sources":["components/TopBar.js","components/restrictions/SingleRestriction.js","components/restrictions/RestrictionsList.js","components/restrictions/Restrictions.js","components/helpers.js","components/statistics/DoomBar.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","Navbar","bg","variant","Brand","href","Nav","className","to","SingleRestriction","props","content","details","map","detail","RestrictionsList","Container","restrictions","category","Card","border","Header","Title","title","Body","restriction","Restrictions","useEffect","ReactGA","pageview","window","location","pathname","search","Jumbotron","fluid","Alert","Row","Col","RestrictionsData","newOrOld","field","statsData","updateWarning","percentageDifference","value","Math","ceil","labelCreator","max","floor","min","toString","insertThinSpace","number","replace","DoomBar","avg","doomCounterValues","doomCounterlabels","push","doomCounterValue","round","ProgressBar","now","label","style","width","size","Landing","lastUpdateDate","lastCases","md","span","order","xs","lg","animated","String","lastRestrictions","Button","block","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40e9220c.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction TopBar() {\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" >\r\n            <Navbar.Brand href=\"/\">info-covid.pl</Navbar.Brand>\r\n            <Nav className=\"w-100 justify-content-end\">\r\n                <Link className=\"nav-link\" to=\"/\">Statystyki</Link>\r\n                <Link className=\"nav-link\" to=\"/restrictions\">Obostrzenia</Link>\r\n                {/* <Link className=\"nav-link\" to=\"/statistics\">Statystyki</Link> */}\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","function SingleRestriction(props) {\r\n    return (\r\n        <li>\r\n            <p className='m-0'>{props.content}</p>\r\n            {props.details &&\r\n                <ul>\r\n                    {props.details.map(detail => {\r\n                        return <li key={detail} className=\"font-weight-light\">{<small>{detail}</small>}</li>\r\n                    })}\r\n                </ul>\r\n            }\r\n            <hr className='m-2' />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SingleRestriction;\r\n","import { Card, Container } from 'react-bootstrap'\r\nimport SingleRestriction from './SingleRestriction'\r\n\r\nfunction RestrictionsList(props) {\r\n    return (\r\n        <Container className=\"p-0\">\r\n            {\r\n                props.restrictions.map(category => {\r\n                    return (\r\n                        <Card key={category.title} border=\"light\">\r\n                            <Card.Header>\r\n                                <Card.Title className=\"m-0\"><h6 className=\"m-0\">{category.title}</h6></Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-1\">\r\n                                <ul className=\"pl-4\">\r\n                                    {category.restrictions.map(restriction => {\r\n                                        return <SingleRestriction key={restriction.content} content={restriction.content} details={restriction.details} />\r\n                                    })}\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RestrictionsList;\r\n","import ReactGA from 'react-ga';\r\nimport RestrictionsList from './RestrictionsList'\r\nimport { Jumbotron, Row, Col, Alert, Container } from 'react-bootstrap'\r\n// import { FaTwitterSquare } from 'react-icons/fa';\r\nimport RestrictionsData from '../../data/restrictions.json'\r\n// import UpcomingRestrictionsData from '../../data/upcomingRestrictions.json'\r\nimport { useEffect } from 'react';\r\n\r\nfunction Restrictions() {\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {/* Commented out, as there are currentlył no new upcoming restrictions  */}\r\n\r\n            {/* <Jumbotron fluid className=\"m-0 pt-0\">\r\n                <Alert className='p-0 m-0' variant='danger'><h4 className=\"text-center\">Nadchodzące obostrzenia</h4></Alert>\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col className='p-0'>\r\n                            <small>Na podstawie <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}MZ_GOV_PL</a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={UpcomingRestrictionsData} />\r\n            </Jumbotron> */}\r\n            <Jumbotron fluid className=\"p-0 m-0\">\r\n                <Alert className='p-0 m-0 pt-1' variant='info'><h4 className=\"text-center\">Aktualne obostrzenia</h4></Alert>\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col className='p-0'>\r\n                            <small>Dokładny spis aktualnych zasad i ograniczeń znajdziesz na <a href=\"https://www.gov.pl/web/koronawirus/aktualne-zasady-i-ograniczenia\"><b>gov.pl</b></a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={RestrictionsData} />\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restrictions;\r\n","import statsData from '../data/statsData.json'\r\n\r\nexport function newOrOld(field) {\r\n    return statsData['today'][field] ? statsData['today'][field] : statsData['yesterday'][field]\r\n}\r\n\r\nexport function updateWarning(field) {\r\n    if (!statsData['today'][field]) {\r\n        return <span className='adnotation text-danger m-0'>(Wczorajsza wartość)</span>\r\n    }\r\n}\r\n\r\nexport function percentageDifference(field) {\r\n    if (!statsData['today'][field]) {\r\n        return null\r\n    }\r\n    const value = Math.ceil(((statsData['today'][field] / statsData['yesterday'][field]) - 1) * 10000) / 100\r\n    if (value > 0)\r\n        return <span className='adnotation text-danger'>({value}%↗)</span>\r\n    if (value === 0)\r\n        return <span className='adnotation text-secondary'>(-%)</span>\r\n    return <span className='adnotation text-success'>({value}%↘)</span>\r\n}\r\n\r\nfunction labelCreator(value, max) {\r\n    if (max)\r\n        return <div>{Math.floor(Math.min(value, max)).toString() + '/' + max.toString()}</div>\r\n    return <div>{value.toString()}</div>\r\n}\r\n\r\nexport function doomCounterValue() {\r\n    var avg = newOrOld('the_average')\r\n    const max = 80 / 100\r\n    const doomCounterValues = []\r\n    const doomCounterlabels = []\r\n    if (avg < 10) {\r\n        doomCounterValues.push(avg / max)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterlabels.push(labelCreator(avg, 10))\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n    } else if (avg < 25) {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push((avg - 10) / max)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push(labelCreator(avg, 25))\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n    } else if (avg < 50) {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push(15 / max)\r\n        doomCounterValues.push((avg - 25) / max)\r\n        doomCounterValues.push(0)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push(labelCreator(avg, 50))\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n    } else if (avg < 70) {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push(15 / max)\r\n        doomCounterValues.push(25 / max)\r\n        doomCounterValues.push((avg - 50) / max)\r\n        doomCounterValues.push(0)\r\n\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push(labelCreator(avg, 70))\r\n        doomCounterlabels.push('')\r\n    } else {\r\n        doomCounterValues.push(10 / max)\r\n        doomCounterValues.push(15 / max)\r\n        doomCounterValues.push(25 / max)\r\n        doomCounterValues.push(20 / max)\r\n        doomCounterValues.push((avg - 70) / max)\r\n\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push('')\r\n        doomCounterlabels.push(labelCreator(avg))\r\n    }\r\n    return [doomCounterValues, doomCounterlabels, avg]\r\n}\r\n\r\nexport function insertThinSpace(number) {\r\n    return number.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"\\u2009\");\r\n}","import { Jumbotron, Container, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport { doomCounterValue } from './../helpers'\r\nimport { FaTwitterSquare } from 'react-icons/fa';\r\nimport { updateWarning, newOrOld, percentageDifference } from '../helpers'\r\n\r\nfunction DoomBar() {\r\n    const [doomCounterValues, doomCounterlabels] = doomCounterValue()\r\n    return (\r\n        <Jumbotron className='p-0 m-2' >\r\n            <Container className=\"text-center pt-2\" >\r\n                <Row>\r\n                    <Col>\r\n                        <h6>Etapy zasad bezpieczeństwa</h6>\r\n                        <p className=\"font-weight-light\">\r\n                            Średnia liczba nowych zakażeń przez ostatnie 7 dni na 100 tys. mieszkańców:\r\n                            <b> {Math.round(newOrOld('the_average') * 1000) / 1000} {percentageDifference('the_average')}\r\n                                {updateWarning('the_average')}\r\n                            </b>\r\n                        </p>\r\n                        <ProgressBar className='doom-bar'>\r\n                            <ProgressBar className=\"color-green\" now={doomCounterValues[0]} />\r\n                            <ProgressBar className=\"color-yellow\" now={doomCounterValues[1]} />\r\n                            <ProgressBar className=\"color-red\" now={doomCounterValues[2]} />\r\n                            <ProgressBar className=\"color-purple\" now={doomCounterValues[3]} />\r\n                            <ProgressBar className=\"color-black\" now={doomCounterValues[4]} />\r\n                        </ProgressBar>\r\n                        <ProgressBar className='doom-light-bar'>\r\n                            <ProgressBar className=\"color-light-green\" now={10 / 0.80} label={doomCounterlabels[0]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">10</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-yellow\" now={15 / 0.80} label={doomCounterlabels[1]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">25</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-red\" now={25 / 0.80} label={doomCounterlabels[2]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">50</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-purple\" now={20 / 0.80} label={doomCounterlabels[3]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">70</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-black\" now={10 / 0.80} label={doomCounterlabels[4]} />\r\n                        </ProgressBar>\r\n                        <Row className='m-0'>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (10 / 0.80).toString() + '%', 'border-left-style': 'dashed' }}>\r\n                                <small>Regionalny podział na strefy</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (15 / 0.80).toString() + '%' }}>\r\n                                <small>Cała polska strefą żółtą, wybrane powiaty strefą czerwoną</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (25 / 0.80).toString() + '%' }}>\r\n                                <small>Cała polska strefą czerwoną</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (20 / 0.80).toString() + '%' }}>\r\n                                <small>Bezpiecznik</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (10 / 0.80).toString() + '%' }}>\r\n                                <small>Kwarantanna narodowa</small>\r\n                            </div>\r\n                        </Row>\r\n                        <hr className='m-2' />\r\n                        <small>Więcej informacji o etapach zasad bezpieczeństwa:</small>\r\n                        <p><a href='https://twitter.com/PremierRP/status/1323980694033489923/photo/1'>{<FaTwitterSquare size={20} />}Kancelaria Premiera</a></p>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron >\r\n    )\r\n}\r\n\r\nexport default DoomBar\r\n","import ReactGA from 'react-ga';\nimport { Jumbotron, Container, Row, Col, Button, ProgressBar } from 'react-bootstrap'\nimport {\n    Link\n} from \"react-router-dom\";\nimport lastUpdateDate from '../data/lastUpdateDate.json'\nimport { newOrOld, percentageDifference, updateWarning, insertThinSpace } from './helpers'\nimport { FaTwitterSquare } from 'react-icons/fa';\nimport { useEffect } from 'react';\nimport DoomBar from './statistics/DoomBar'\n\nfunction Landing() {\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n    return (\n        <div>\n            <Jumbotron className='p-0 m-2' >\n                <Container className=\"text-center pt-2\" >\n                    <Row>\n                        <Col>\n                            <p className='m-0'>Ostatnia aktualizacja: {lastUpdateDate.lastCases}</p>\n                            <hr className='m-2' />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 4, order: 1 }} xs={{ span: 6, order: 1 }} className='mb-3'>\n                            <h6>Nowe zakażenia:</h6>\n                            <h4 className='m-0'>{insertThinSpace(newOrOld('new_cases_today'))}</h4>\n                            {updateWarning('new_cases_today')}\n                            {percentageDifference('new_cases_today')}\n                        </Col>\n                        <Col md={{ span: 4, order: 2 }} xs={{ span: 12, order: 3 }} className='mb-3'>\n                            <h6>Aktywne przypadki:</h6>\n                            <h4 className='m-0'>{insertThinSpace(newOrOld('active_cases'))}</h4>\n                            {updateWarning('active_cases')}\n                            {percentageDifference('active_cases')}\n                        </Col>\n                        <Col md={{ span: 4, order: 3 }} xs={{ span: 6, order: 2 }} className='mb-3'>\n                            <h6>Nowe zgony:</h6>\n                            <h4 className='m-0'>{insertThinSpace(newOrOld('dead_all_today'))}</h4>\n                            {updateWarning('dead_all_today')}\n                            {percentageDifference('dead_all_today')}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <hr />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg={{ span: 3, order: 1 }} md={{ span: 6, order: 1 }} xs={{ span: 6, order: 1 }}>\n                            <h6>Liczba testów:</h6>\n                            <Row>\n                                <Col>\n                                    <h4 className='m-0'>{newOrOld('tests_done_today')}</h4>\n                                    <p className='m-0 p-0'><small className='text-muted font-weight-normal'>{newOrOld('percent_positive')} pozytywnych</small></p>\n                                    {updateWarning('tests_done_today')}\n                                </Col>\n                            </Row>\n                            <br />\n                        </Col>\n                        <Col lg={{ span: 3, order: 2 }} md={{ span: 6, order: 3 }} xs={{ span: 6, order: 3 }}>\n                            <h6>Zajęte respiratory:</h6>\n                            <h5>{insertThinSpace(newOrOld('occupied_respirator_count'))}/{insertThinSpace(newOrOld('respirator_count'))}</h5>\n                            <ProgressBar variant=\"danger\" animated\n                                now={newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100}\n                                label={String(Math.floor(newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100)) + '%'} />\n                            {updateWarning('occupied_respirator_count')}\n                        </Col>\n                        <Col lg={{ span: 3, order: 3 }} md={{ span: 6, order: 4 }} xs={{ span: 6, order: 4 }}>\n                            <h6>Zajęte łóżka:</h6>\n                            <h5>{insertThinSpace(newOrOld('occupied_bed_count'))}/{insertThinSpace(newOrOld('bed_count'))}</h5>\n                            <ProgressBar variant=\"danger\" animated\n                                now={newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100}\n                                label={String(Math.floor(newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100)) + '%'} />\n                            {updateWarning('occupied_bed_count')}\n                        </Col>\n                        <Col lg={{ span: 3, order: 4 }} md={{ span: 6, order: 2 }} xs={{ span: 6, order: 2 }}>\n                            <h6>Zgony Łącznie:</h6>\n                            <h4>{insertThinSpace(newOrOld('dead_global'))}</h4>\n                            {updateWarning('dead_global')}\n                            <br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <hr className='m-2' />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className='mb-2'>\n                            <small>Dane pobierane z <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}MZ_GOV_PL</a></small>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <DoomBar />\n            <Jumbotron className='p-0 m-2' >\n                <Container>\n                    <Row className=\"text-center\">\n                        <Col>\n                            <p className='m-0'>Aktualnie obowiązujące obostrzenia z dnia: {lastUpdateDate.lastRestrictions}</p>\n                        </Col>\n                    </Row>\n                    <Row className='m-0'>\n                        <Col className='p-0 m-2'>\n                            <Button className='restrictions-button p-0' block><Link to=\"/restrictions\"><p className='m-2 text-white'>Zobacz obostrzenia</p></Link></Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </div >\n    );\n}\n\nexport default Landing;\n","import TopBar from './components/TopBar'\nimport Restrictions from './components/restrictions/Restrictions'\nimport Landing from './components/Landing'\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <TopBar />\n      <Switch>\n        <Route path={process.env.PUBLIC_URL + '/restrictions'}>\n          <Restrictions />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + '/statistics'}>\n          <Landing />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + '/'}>\n          <Landing />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactGA from 'react-ga';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactGA.initialize('G-5J0BQEKJX3');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
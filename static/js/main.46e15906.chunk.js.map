{"version":3,"sources":["components/TopBar.js","components/restrictions/SingleRestriction.js","components/restrictions/RestrictionsList.js","components/restrictions/Restrictions.js","components/helpers.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","Navbar","bg","variant","Brand","href","Nav","className","to","SingleRestriction","props","content","details","map","detail","RestrictionsList","Container","restrictions","category","Card","border","Header","Title","title","Body","restriction","Restrictions","useEffect","ReactGA","pageview","window","location","pathname","search","console","log","Jumbotron","fluid","Alert","Row","Col","size","UpcomingRestrictionsData","RestrictionsData","newOrOld","field","statsData","updateWarning","percentageDifference","value","Math","floor","Landing","lastUpdateDate","lastCases","ProgressBar","animated","now","label","String","lastRestrictions","Button","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46e15906.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction TopBar() {\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" >\r\n            <Navbar.Brand href=\"/\">info-covid.pl</Navbar.Brand>\r\n            <Nav className=\"w-100 justify-content-end\">\r\n                <Link className=\"nav-link\" to=\"/\">Statystyki</Link>\r\n                <Link className=\"nav-link\" to=\"/restrictions\">Obostrzenia</Link>\r\n                {/* <Link className=\"nav-link\" to=\"/statistics\">Statystyki</Link> */}\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","function SingleRestriction(props) {\r\n    return (\r\n        <li>\r\n            <p className='m-0'>{props.content}</p>\r\n            {props.details &&\r\n                <ul>\r\n                    {props.details.map(detail => {\r\n                        return <li key={detail} className=\"font-weight-light\">{<small>{detail}</small>}</li>\r\n                    })}\r\n                </ul>\r\n            }\r\n            <hr className='m-2' />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SingleRestriction;\r\n","import { Card, Container } from 'react-bootstrap'\r\nimport SingleRestriction from './SingleRestriction'\r\n\r\nfunction RestrictionsList(props) {\r\n    return (\r\n        <Container className=\"p-0\">\r\n            {\r\n                props.restrictions.map(category => {\r\n                    return (\r\n                        <Card key={category.title} border=\"light\">\r\n                            <Card.Header>\r\n                                <Card.Title className=\"m-0\"><h6 className=\"m-0\">{category.title}</h6></Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-1\">\r\n                                <ul className=\"pl-4\">\r\n                                    {category.restrictions.map(restriction => {\r\n                                        return <SingleRestriction key={restriction.content} content={restriction.content} details={restriction.details} />\r\n                                    })}\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RestrictionsList;\r\n","import ReactGA from 'react-ga';\r\nimport RestrictionsList from './RestrictionsList'\r\nimport { Jumbotron, Row, Col, Alert, Container } from 'react-bootstrap'\r\nimport { FaTwitterSquare } from 'react-icons/fa';\r\nimport RestrictionsData from '../../data/restrictions.json'\r\nimport UpcomingRestrictionsData from '../../data/upcomingRestrictions.json'\r\nimport { useEffect } from 'react';\r\n\r\nfunction Restrictions() {\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n        console.log(window.location.pathname + window.location.search);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid className=\"m-0 pt-0\">\r\n                <Alert className='p-0 m-0' variant='danger'><h4 className=\"text-center\">Nadchodzące obostrzenia</h4></Alert>\r\n                <Container className='p-0'>\r\n                    <Row className=\"text-center\">\r\n                        <Col>\r\n                            <small>Na podstawie <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}</a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={UpcomingRestrictionsData} />\r\n            </Jumbotron>\r\n            <Jumbotron fluid className=\"p-0 m-0\">\r\n                <Alert className='p-0 m-0' variant='info'><h4 className=\"text-center\">Aktualne obostrzenia</h4></Alert>\r\n                <Container className='p-0'>\r\n                    <Row className=\"text-center\">\r\n                        <Col>\r\n                            <small>Dokładny spis aktualnych zasad i ograniczeń znajdziesz na <a href=\"https://www.gov.pl/web/koronawirus/aktualne-zasady-i-ograniczenia\"><b>gov.pl</b></a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={RestrictionsData} />\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restrictions;\r\n","import statsData from '../data/statsData.json'\r\n\r\nexport function newOrOld(field) {\r\n    return statsData['today'][field] ? statsData['today'][field] : statsData['yesterday'][field]\r\n}\r\n\r\nexport function updateWarning(field) {\r\n    if (!statsData['today'][field]) {\r\n        return <p className='adnotation text-danger m-0'>(Wczorajsza wartość)</p>\r\n    }\r\n}\r\n\r\nexport function percentageDifference(field) {\r\n    if (!statsData['today'][field]) {\r\n        return null\r\n    }\r\n    const value = Math.floor(((statsData['today'][field] / statsData['yesterday'][field]) - 1) * 100)\r\n    if (value > 0)\r\n        return <div className='adnotation text-danger'>({value}%↗)</div>\r\n    if (value === 0)\r\n        return <div className='adnotation text-secondary'>(-%)</div>\r\n    return <div className='adnotation text-success'>({value}%↘)</div>\r\n}","import ReactGA from 'react-ga';\r\nimport { Jumbotron, Container, Row, Col, Button, ProgressBar } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport lastUpdateDate from '../data/lastUpdateDate.json'\r\nimport { newOrOld, percentageDifference, updateWarning } from './helpers'\r\nimport { FaTwitterSquare } from 'react-icons/fa';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Landing() {\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n        console.log(window.location.pathname + window.location.search);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid className='p-1 m-2' >\r\n                <Container fluid className=\"text-center\" >\r\n                    <Row>\r\n                        <Col>\r\n                            <p className='m-0 font-weight-light'>Ostatnia aktualizacja: {lastUpdateDate.lastCases}</p>\r\n                            <hr className='m-2' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Nowe zakażenia:</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <h6>Nowe zgony:</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mb-3'>\r\n                        <Col>\r\n                            <h4 className='m-0'>{newOrOld('new_cases_today')}</h4>\r\n                            {updateWarning('new_cases_today')}\r\n                            {percentageDifference('new_cases_today')}\r\n                        </Col>\r\n                        <Col>\r\n                            <h4 className='m-0'>{newOrOld('dead_all_today')}</h4>\r\n                            {updateWarning('dead_all_today')}\r\n                            {percentageDifference('dead_all_today')}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Aktywne przypadki:</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mb-3'>\r\n                        <Col>\r\n                            <h4 className='m-0'>{newOrOld('active_cases')}</h4>\r\n                            {updateWarning('active_cases')}\r\n                            {percentageDifference('active_cases')}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Liczba testów:</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <h6>Zgony Łącznie:</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mb-3'>\r\n                        <Col>\r\n                            <h4>{newOrOld('tests_done_today')}</h4>\r\n                            {updateWarning('tests_done_today')}\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>{newOrOld('dead_global')}</h4>\r\n                            {updateWarning('dead_global')}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Zajęte respiratory:</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <h6>Zajęte łóżka:</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h5>{newOrOld('occupied_respirator_count')}/{newOrOld('respirator_count')}</h5>\r\n                            <ProgressBar variant=\"danger\" animated\r\n                                now={newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100}\r\n                                label={String(Math.floor(newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100)) + '%'} />\r\n                            {updateWarning('occupied_respirator_count')}\r\n                        </Col>\r\n                        <Col>\r\n                            <h5>{newOrOld('occupied_bed_count')}/{newOrOld('bed_count')}</h5>\r\n                            <ProgressBar variant=\"danger\" animated\r\n                                now={newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100}\r\n                                label={String(Math.floor(newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100)) + '%'} />\r\n                            {updateWarning('occupied_bed_count')}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <hr className='m-2' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <small>Dane pobierane z <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}</a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n            <Jumbotron fluid className='p-1 m-2' >\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col>\r\n                            <p className='m-0'>Aktualnie obowiązujące obostrzenia z dnia: {lastUpdateDate.lastRestrictions}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='m-0'>\r\n                        <Col className='p-0 m-2'>\r\n                            <Link to=\"/restrictions\"><Button className='w-100'>Zobacz obostrzenia</Button></Link>\r\n                        </Col>\r\n                        {/* <Col className='p-0 m-2'>\r\n                            <Link to=\"/statistics\"><Button className='w-100'>Statystyki</Button></Link>\r\n                        </Col> */}\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import TopBar from './components/TopBar'\nimport Restrictions from './components/restrictions/Restrictions'\nimport Landing from './components/Landing'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <TopBar />\n      <Switch>\n        <Route path=\"/restrictions\">\n          <Restrictions />\n        </Route>\n        <Route path=\"/statistics\">\n          <Landing />\n        </Route>\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactGA from 'react-ga';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactGA.initialize('G-5J0BQEKJX3');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
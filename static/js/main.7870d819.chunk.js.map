{"version":3,"sources":["components/TopBar.js","components/restrictions/SingleRestriction.js","components/restrictions/RestrictionsList.js","components/restrictions/Restrictions.js","components/helpers.js","components/statistics/DoomBar.js","components/Vaccines.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","Navbar","bg","variant","Brand","href","SingleRestriction","props","className","content","details","map","detail","RestrictionsList","Container","restrictions","category","Card","border","Header","Title","title","Body","restriction","Restrictions","useEffect","ReactGA","pageview","window","location","pathname","search","Jumbotron","fluid","Alert","Row","Col","RestrictionsData","newOrOld","field","statsData","updateWarning","percentageDifference","value","Math","ceil","labelCreator","max","floor","min","toString","insertThinSpace","number","replace","DoomBar","steps","stepsProcessed","x","i","length","push","avg","doomCounterValues","doomCounterlabels","j","doomCounterValue","round","ProgressBar","now","label","style","width","size","Vaccines","useState","data","setData","axios","get","then","response","features","attributes","DATA_SHOW","md","span","order","xs","SZCZEPIENIA_SUMA","DAWKA_2_SUMA","SZCZEPIENIA_DZIENNIE","animated","Landing","lastUpdateDate","lastCases","lg","String","App","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7870d819.chunk.js","sourcesContent":["import { Navbar } from 'react-bootstrap'\r\n\r\nfunction TopBar() {\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\" >\r\n            <Navbar.Brand href=\"/\">info-covid.pl</Navbar.Brand>\r\n            {/* <Nav className=\"w-100 justify-content-end\">\r\n                <Link className=\"nav-link\" to=\"/\">Statystyki</Link>\r\n                <Link className=\"nav-link\" to=\"/restrictions\">Obostrzenia</Link>\r\n            </Nav> */}\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","function SingleRestriction(props) {\r\n    return (\r\n        <li>\r\n            <p className='m-0'>{props.content}</p>\r\n            {props.details &&\r\n                <ul>\r\n                    {props.details.map(detail => {\r\n                        return <li key={detail} className=\"font-weight-light\">{<small>{detail}</small>}</li>\r\n                    })}\r\n                </ul>\r\n            }\r\n            <hr className='m-2' />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SingleRestriction;\r\n","import { Card, Container } from 'react-bootstrap'\r\nimport SingleRestriction from './SingleRestriction'\r\n\r\nfunction RestrictionsList(props) {\r\n    return (\r\n        <Container className=\"p-0\">\r\n            {\r\n                props.restrictions.map(category => {\r\n                    return (\r\n                        <Card key={category.title} border=\"light\">\r\n                            <Card.Header>\r\n                                <Card.Title className=\"m-0\"><h6 className=\"m-0\">{category.title}</h6></Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-1\">\r\n                                <ul className=\"pl-4\">\r\n                                    {category.restrictions.map(restriction => {\r\n                                        return <SingleRestriction key={restriction.content} content={restriction.content} details={restriction.details} />\r\n                                    })}\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RestrictionsList;\r\n","import ReactGA from 'react-ga';\r\nimport RestrictionsList from './RestrictionsList'\r\nimport { Jumbotron, Row, Col, Alert, Container } from 'react-bootstrap'\r\n// import { FaTwitterSquare } from 'react-icons/fa';\r\nimport RestrictionsData from '../../data/restrictions.json'\r\n// import UpcomingRestrictionsData from '../../data/upcomingRestrictions.json'\r\nimport { useEffect } from 'react';\r\n\r\nfunction Restrictions() {\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {/* Commented out, as there are currentlył no new upcoming restrictions  */}\r\n\r\n            {/* <Jumbotron fluid className=\"m-0 pt-0\">\r\n                <Alert className='p-0 m-0' variant='danger'><h4 className=\"text-center\">Nadchodzące obostrzenia</h4></Alert>\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col className='p-0'>\r\n                            <small>Na podstawie <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}MZ_GOV_PL</a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={UpcomingRestrictionsData} />\r\n            </Jumbotron> */}\r\n            <Jumbotron fluid className=\"p-0 m-0\">\r\n                <Alert className='p-0 m-0 pt-1' variant='info'><h4 className=\"text-center\">Aktualne obostrzenia</h4></Alert>\r\n                <Container>\r\n                    <Row className=\"text-center\">\r\n                        <Col className='p-0'>\r\n                            <small>Dokładny spis aktualnych zasad i ograniczeń znajdziesz na <a href=\"https://www.gov.pl/web/koronawirus/aktualne-zasady-i-ograniczenia\"><b>gov.pl</b></a></small>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <RestrictionsList restrictions={RestrictionsData} />\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restrictions;\r\n","import statsData from '../data/statsData.json'\r\n\r\nexport function newOrOld(field) {\r\n    return statsData['today'][field] ? statsData['today'][field] : statsData['yesterday'][field]\r\n}\r\n\r\nexport function updateWarning(field) {\r\n    if (!statsData['today'][field]) {\r\n        return <span className='adnotation text-danger m-0'>(Wczorajsza wartość)</span>\r\n    }\r\n}\r\n\r\nexport function percentageDifference(field) {\r\n    if (!statsData['today'][field]) {\r\n        return null\r\n    }\r\n    const value = Math.ceil(((statsData['today'][field] / statsData['yesterday'][field]) - 1) * 10000) / 100\r\n    if (value > 0)\r\n        return <span className='adnotation text-danger'>({value}%↗)</span>\r\n    if (value === 0)\r\n        return <span className='adnotation text-secondary'>(-%)</span>\r\n    return <span className='adnotation text-success'>({value}%↘)</span>\r\n}\r\n\r\nfunction labelCreator(value, max) {\r\n    if (max)\r\n        return <div>{Math.floor(Math.min(value, max)).toString() + '/' + max.toString()}</div>\r\n    return <div>{value.toString()}</div>\r\n}\r\n\r\nexport function doomCounterValue() {\r\n    let steps = [3800, 9400, 19000, 27000]\r\n    let stepsProcessed = steps.map(x => x)\r\n    for (let i = 1; i < steps.length; i++) {\r\n        stepsProcessed[i] = steps[i] - steps[i - 1]\r\n    }\r\n    stepsProcessed.push(4000)\r\n    const max = 31000 / 100\r\n\r\n    var avg = newOrOld('the_average')\r\n    const doomCounterValues = []\r\n    const doomCounterlabels = []\r\n    for (let i = 0; i < 5; i++) {\r\n        if (avg < steps[i] || i >= steps.length) {\r\n            for (let j = 0; j < 5; j++) {\r\n                if (j < i) {\r\n                    doomCounterValues.push(stepsProcessed[j] / max)\r\n                    doomCounterlabels.push('')\r\n                }\r\n                if (j === i) {\r\n                    if (i >= steps.length) {\r\n                        doomCounterValues.push((avg - steps[i - 1]) / max)\r\n                        doomCounterlabels.push(labelCreator(avg))\r\n                        break\r\n                    }\r\n                    if (i === 0) {\r\n                        doomCounterValues.push(avg / max)\r\n                        doomCounterlabels.push(labelCreator(avg))\r\n                        break\r\n                    }\r\n                    doomCounterValues.push((avg - steps[j - 1]) / max)\r\n                    doomCounterlabels.push(labelCreator(avg, steps[j]))\r\n                }\r\n                if (j > i) {\r\n                    doomCounterValues.push(0)\r\n                    doomCounterlabels.push('')\r\n                }\r\n            }\r\n            break\r\n        }\r\n    }\r\n    return [steps, stepsProcessed, max, doomCounterValues, doomCounterlabels, avg]\r\n}\r\n\r\nexport function insertThinSpace(number) {\r\n    return number.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"\\u2009\");\r\n}\r\n","import { Jumbotron, Container, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport { doomCounterValue } from './../helpers'\r\nimport { FaTwitterSquare } from 'react-icons/fa';\r\nimport { updateWarning, newOrOld, percentageDifference } from '../helpers'\r\n\r\nfunction DoomBar() {\r\n    const [steps, stepsProcessed, max, doomCounterValues, doomCounterlabels] = doomCounterValue()\r\n    return (\r\n        <Jumbotron className='p-0 m-2' >\r\n            <Container className=\"text-center pt-2\" >\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Etapy zasad bezpieczeństwa</h4>\r\n                        <p className=\"font-weight-light\">\r\n                            Średnia liczba nowych zakażeń przez ostatnie 7 dni:\r\n                            <b> {Math.round(newOrOld('the_average'))} {percentageDifference('the_average')}\r\n                                {updateWarning('the_average')}\r\n                            </b>\r\n                        </p>\r\n                        <ProgressBar className='doom-bar'>\r\n                            <ProgressBar className=\"color-green\" now={doomCounterValues[0]} />\r\n                            <ProgressBar className=\"color-yellow\" now={doomCounterValues[1]} />\r\n                            <ProgressBar className=\"color-red\" now={doomCounterValues[2]} />\r\n                            <ProgressBar className=\"color-purple\" now={doomCounterValues[3]} />\r\n                            <ProgressBar className=\"color-black\" now={doomCounterValues[4]} />\r\n                        </ProgressBar>\r\n                        <ProgressBar className='doom-light-bar'>\r\n                            <ProgressBar className=\"color-light-green\" now={stepsProcessed[0] / max} label={doomCounterlabels[0]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">{steps[0]}</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-yellow\" now={stepsProcessed[1] / max} label={doomCounterlabels[1]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">{steps[1]}</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-red\" now={stepsProcessed[2] / max} label={doomCounterlabels[2]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">{steps[2]}</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-purple\" now={stepsProcessed[3] / max} label={doomCounterlabels[3]} />\r\n                            <div>\r\n                                <span className=\"tooltiptext\">{steps[3]}</span>\r\n                            </div>\r\n                            <ProgressBar className=\"color-light-black\" now={stepsProcessed[4] / max} label={doomCounterlabels[4]} />\r\n                        </ProgressBar>\r\n                        <Row className='m-0'>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (stepsProcessed[0] / max).toString() + '%', 'border-left-style': 'dashed' }}>\r\n                                <small>Regionalny podział na strefy</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (stepsProcessed[1] / max).toString() + '%' }}>\r\n                                <small>Cała polska strefą żółtą, wybrane powiaty strefą czerwoną</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (stepsProcessed[2] / max).toString() + '%' }}>\r\n                                <small>Cała polska strefą czerwoną</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (stepsProcessed[3] / max).toString() + '%' }}>\r\n                                <small>Bezpiecznik/Faza odpowiedzialności</small>\r\n                            </div>\r\n                            <div className='doom-bar-label d-md-inline d-lg-inline d-none' style={{ width: (stepsProcessed[4] / max).toString() + '%' }}>\r\n                                <small>Kwarantanna narodowa</small>\r\n                            </div>\r\n                        </Row>\r\n                        <hr className='m-2' />\r\n                        <small>Więcej informacji o etapach zasad bezpieczeństwa:</small>\r\n                        <p><a href='https://twitter.com/PremierRP/status/1330078274987450369/photo/1'>{<FaTwitterSquare size={20} />}Kancelaria Premiera</a></p>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron >\r\n    )\r\n}\r\n\r\nexport default DoomBar\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport { insertThinSpace } from './helpers'\r\n\r\nfunction Vaccines() {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://services-eu1.arcgis.com/zk7YlClTgerl62BY/arcgis/rest/services/global_szczepienia_widok3/FeatureServer/0/query?f=json&where=Data%20BETWEEN%20(CURRENT_TIMESTAMP%20-%20INTERVAL%20%2724%27%20HOUR)%20AND%20CURRENT_TIMESTAMP&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outSR=102100&resultOffset=0&resultRecordCount=1&resultType=standard\", {\r\n        }).then(response => {\r\n          setData(response.data.features[0].attributes)\r\n        })\r\n    }, []);\r\n\r\n    if(!data)\r\n        return null\r\n    return (\r\n        <div>\r\n            <Jumbotron className='p-0 m-2' >\r\n                <div className=\"text-center\">\r\n                <h2>Szczepienia</h2>\r\n                </div>\r\n                <Container className=\"text-center pt-2\" >\r\n                <Row>\r\n                        <Col>\r\n                            <p className='m-0'>Ostatnia aktualizacja: {data.DATA_SHOW}</p>\r\n                            <hr className='m-2' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={{ span: 4, order: 1 }} xs={{ span: 6, order: 1 }} className='mb-3'>\r\n                            <h6>Szczepienia ogółem:</h6>\r\n                            <h4 className='m-0'>{insertThinSpace(data.SZCZEPIENIA_SUMA.toString())}</h4>\r\n                        </Col>\r\n                        <Col md={{ span: 4, order: 2 }} xs={{ span: 12, order: 3 }} className='mb-3'>\r\n                        <h6>Drugie dawki ogółem:</h6>\r\n                            <h4 className='m-0'>{insertThinSpace(data.DAWKA_2_SUMA.toString())}</h4>\r\n                        </Col>\r\n                        <Col md={{ span: 4, order: 3 }} xs={{ span: 6, order: 2 }} className='mb-3'>\r\n                        <h6>Szczepienia w ciągu ostatniej doby:</h6>\r\n                            <h4 className='m-0'>{insertThinSpace(data.SZCZEPIENIA_DZIENNIE.toString())}</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <hr className='m-2' />\r\n                            <h5 className='m-0'>Poziom zaszczepienia populacji Polski</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                        <ProgressBar className='doom-bar mt-2'>\r\n                            <ProgressBar className=\"color-green\" animated now={data.DAWKA_2_SUMA/38508081 * 100} />\r\n                            <ProgressBar className=\"color-yellow\" now={(data.SZCZEPIENIA_SUMA-(2*data.DAWKA_2_SUMA))/38508081 * 100} />\r\n                        </ProgressBar>\r\n                        <ProgressBar className='doom-light-bar'>\r\n                            <ProgressBar className=\"color-light\" now={100} label={Math.ceil(data.DAWKA_2_SUMA/38508081 * 10000)/100 + '% (za 21 dni przewidujemy około ' + Math.ceil((data.SZCZEPIENIA_SUMA-(data.DAWKA_2_SUMA))/38508081 * 10000)/100 + '%)'} />\r\n                        </ProgressBar>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col>\r\n                        <small><span className=\"color-green\">Kolor zielony</span> - część populacji zaszczepiona pierwszą oraz drugą dawką (tej wartości dotyczy procent)</small>\r\n                        </Col>\r\n                        <Col>\r\n                        <small><span className=\"color-yellow\">Kolor żółty</span> - część populacji, która otrzymała tylko pierwszą dawkę</small>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <hr />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Vaccines;\r\n","import ReactGA from 'react-ga';\nimport { Jumbotron, Container, Row, Col, ProgressBar } from 'react-bootstrap'\nimport lastUpdateDate from '../data/lastUpdateDate.json'\nimport { newOrOld, percentageDifference, updateWarning, insertThinSpace } from './helpers'\nimport { FaTwitterSquare } from 'react-icons/fa';\nimport { useEffect } from 'react';\nimport DoomBar from './statistics/DoomBar'\nimport Vaccines from './Vaccines'\n\nfunction Landing() {\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n\n    return (\n        <div>\n            <Vaccines/>\n            <Jumbotron className='p-0 m-2' >\n                <div className=\"text-center\">\n                <h2>Zachorowania</h2>\n                </div>\n                <Container className=\"text-center pt-2\" >\n                    <Row>\n                        <Col>\n                            <p className='m-0'>Ostatnia aktualizacja: {lastUpdateDate.lastCases}</p>\n                            <hr className='m-2' />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 4, order: 1 }} xs={{ span: 6, order: 1 }} className='mb-3'>\n                            <h6>Nowe zakażenia:</h6>\n                            <h4 className='m-0'>{insertThinSpace(newOrOld('new_cases_today'))}</h4>\n                            {updateWarning('new_cases_today')}\n                            {percentageDifference('new_cases_today')}\n                        </Col>\n                        <Col md={{ span: 4, order: 2 }} xs={{ span: 12, order: 3 }} className='mb-3'>\n                            <h6>Aktywne przypadki:</h6>\n                            <h4 className='m-0'>{insertThinSpace(newOrOld('active_cases'))}</h4>\n                            {updateWarning('active_cases')}\n                            {percentageDifference('active_cases')}\n                        </Col>\n                        <Col md={{ span: 4, order: 3 }} xs={{ span: 6, order: 2 }} className='mb-3'>\n                            <h6>Nowe zgony:</h6>\n                            <h4 className='m-0'>{insertThinSpace(newOrOld('dead_all_today'))}</h4>\n                            {updateWarning('dead_all_today')}\n                            {percentageDifference('dead_all_today')}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <hr />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg={{ span: 3, order: 1 }} md={{ span: 6, order: 1 }} xs={{ span: 6, order: 1 }}>\n                            <h6>Liczba testów:</h6>\n                            <Row>\n                                <Col>\n                                    <h4 className='m-0'>{newOrOld('tests_done_today')}</h4>\n                                    <p className='m-0 p-0'><small className='text-muted font-weight-normal'>{newOrOld('percent_positive')} pozytywnych</small></p>\n                                    {updateWarning('tests_done_today')}\n                                </Col>\n                            </Row>\n                            <br />\n                        </Col>\n                        <Col lg={{ span: 3, order: 2 }} md={{ span: 6, order: 3 }} xs={{ span: 6, order: 3 }}>\n                            <h6>Zajęte respiratory:</h6>\n                            <h5>{insertThinSpace(newOrOld('occupied_respirator_count'))}/{insertThinSpace(newOrOld('respirator_count'))}</h5>\n                            <ProgressBar variant=\"danger\" animated\n                                now={newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100}\n                                label={String(Math.floor(newOrOld('occupied_respirator_count') / newOrOld('respirator_count') * 100)) + '%'} />\n                            {updateWarning('occupied_respirator_count')}\n                        </Col>\n                        <Col lg={{ span: 3, order: 3 }} md={{ span: 6, order: 4 }} xs={{ span: 6, order: 4 }}>\n                            <h6>Zajęte łóżka:</h6>\n                            <h5>{insertThinSpace(newOrOld('occupied_bed_count'))}/{insertThinSpace(newOrOld('bed_count'))}</h5>\n                            <ProgressBar variant=\"danger\" animated\n                                now={newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100}\n                                label={String(Math.floor(newOrOld('occupied_bed_count') / newOrOld('bed_count') * 100)) + '%'} />\n                            {updateWarning('occupied_bed_count')}\n                        </Col>\n                        <Col lg={{ span: 3, order: 4 }} md={{ span: 6, order: 2 }} xs={{ span: 6, order: 2 }}>\n                            <h6>Zgony Łącznie:</h6>\n                            <h4>{insertThinSpace(newOrOld('dead_global'))}</h4>\n                            {updateWarning('dead_global')}\n                            <br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <hr className='m-2' />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className='mb-2'>\n                            <small>Dane pobierane z <a href='https://twitter.com/MZ_GOV_PL'>{<FaTwitterSquare size={20} />}MZ_GOV_PL</a></small>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <DoomBar />\n            {/* <Jumbotron className='p-0 m-2' >\n                <Container>\n                    <Row className=\"text-center\">\n                        <Col>\n                            <p className='m-0'>Aktualnie obowiązujące obostrzenia z dnia: {lastUpdateDate.lastRestrictions}</p>\n                        </Col>\n                    </Row>\n                    <Row className='m-0'>\n                        <Col className='p-0 m-2'>\n                            <Button className='restrictions-button p-0' block><Link to=\"/restrictions\"><p className='m-2 text-white'>Zobacz obostrzenia</p></Link></Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron> */}\n        </div >\n    );\n}\n\nexport default Landing;\n","import TopBar from './components/TopBar'\nimport Restrictions from './components/restrictions/Restrictions'\nimport Landing from './components/Landing'\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <HashRouter basename=\"/\">\n      <TopBar />\n      <Switch>\n        <Route path={process.env.PUBLIC_URL + '/restrictions'}>\n          <Restrictions />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + '/statistics'}>\n          <Landing />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + '/'}>\n          <Landing />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactGA from 'react-ga';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactGA.initialize('G-5J0BQEKJX3');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}